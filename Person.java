package model;

import exceptions.InputOutOfRangeException;
import exceptions.InvalidInputException;
import exceptions.NegativeNumException;

import java.util.ArrayList;
import java.util.Map;
import java.util.Scanner;

public class Person {
    private String userName;
    private String emailAddress;
    private String passWord;
    private String gender;

    private MediaList movieList;
    private MediaList TVShowList;


    private static int userNum = 100;

    //MODIFIES: this
    //EFFECTS: constructs a person object with default information that generated by the system automatically
    public Person() {
        this.userName = "user" + userNum;
        userNum++;
        this.emailAddress = "none";
        this.passWord = "none";
        this.gender = "not specify";
        this.movieList = new MediaList();
        this.TVShowList = new MediaList();
    }

    //MODIFIES: this
    //EFFECTS: constructs a person object with valid personalized information
    public Person(String name, String eAddress, int g) {
        if(name == null) {
            this.userName = "user" + userNum;
            userNum++;
        }
        if(eAddress == null) {
            this.emailAddress = "none";
        }
        else {
            this.userName = name;
            this.emailAddress = eAddress;
        }
        this.gender = setGender(g);
        this.movieList = new MediaList();
        this.TVShowList = new MediaList();
    }

    //EFFECTS: return person's gender in string according to their input
    public String setGender(int g) {
        String gender;
        if(g == 1) { gender = "Female"; }
        else if(g == 2) { gender = "Male"; }
        else if(g == 3) { gender = "Trans"; }
        else {gender = "rather not tell"; }
        return gender;
    }

    public void setPassword(String pw) {
        this.passWord = pw;
    }

    public String getName() {
        return this.userName;
    }

    //MODIFIES: MediaDataBase dataBase
    //EFFECTS: add movies and TV shows to this person's two wish lists respectively based on their input numbers
    public void addToWishList(String favNumber, MediaDataBase movieDataBase, MediaDataBase tvShowDataBase) throws InvalidInputException {
        Scanner sc = new Scanner(favNumber);
        try {
            while(sc.hasNext()) {
                Media aMedia;
                int boundSize = movieDataBase.getMediaDataBaseSize() + tvShowDataBase.getMediaDataBaseSize();
                InputIdentifier identifier = new InputIdentifier();
                int number = identifier.identifyInput(sc, boundSize);

                if(number <= movieDataBase.getMediaDataBaseSize()) {
                    aMedia = movieDataBase.getAMedia(number);
                    movieList.addToMediaList(aMedia);
                }
                else if(number <= (movieDataBase.getMediaDataBaseSize() + tvShowDataBase.getMediaDataBaseSize())){
                    aMedia = tvShowDataBase.getAMedia(number - movieDataBase.getMediaDataBaseSize());
                    TVShowList.addToMediaList(aMedia);
                }
            }
        } finally {
            sc.close();
        }

    }

    //EFFECTS: returns the movieList
    public MediaList getMovieList() {
        return this.movieList;
    }
    //EFFECTS: returns the TVShowList
    public MediaList getTVShowList() {
        return this.TVShowList;
    }

    public void deleteFromWishList(int deleteNum, String type) {
        if(type.equals("M")) {
            movieList.deleteMedia(deleteNum);
        }
        else {
            TVShowList.deleteMedia(deleteNum);
        }
    }

    //EFFECTS: prints out the user's information
    public void printOutProfileInfo() {
        System.out.println(userName + '\n' + "email: " + emailAddress + '\n' + "Password: " + passWord + '\n' + "Gender: " + gender);
    }
}

package model;

import java.util.ArrayList;
import java.util.Scanner;

public class Person {
    private String userName;
    private String emailAddress;
    private String passWord;
    private String gender;
    private ArrayList<Media> movieList;
    private ArrayList<Media> TVShowList;

    private static int userNum = 100;

    //MODIFIES: this
    //EFFECTS: constructs a person object with default information that generated by the system automatically
    public Person() {
        this.userName = "user" + userNum;
        userNum++;
        this.emailAddress = "none";
        this.passWord = "none";
        this.gender = "not specify";
        this.movieList = new ArrayList<>();
        this.TVShowList = new ArrayList<>();
    }

    //REQUESTS: Name, Email Address nad Gender cannot be empty
    //MODIFIES: this
    //EFFECTS: constructs a person object with valid personalized information
    public Person(String name, String eAddress, int g) {
        this.userName = name;
        this.emailAddress = eAddress;
//        userNum++;
        String gen;
        if(g == 1) { gen = "Female"; }
        else if(g == 2) { gen = "Male"; }
        else if(g == 3) { gen = "Trans"; }
        else {gen = "rather not tell"; }
        this.gender = gen;

        this.movieList = new ArrayList<>();
        this.TVShowList = new ArrayList<>();
    }

    public void setPassword(String pw) {
        this.passWord = pw;
    }

    public String getName() {
        return this.userName;
    }

    //MODIFIES: this
    //EFFECTS: add the movie to the movieList if it isn't already in the list
    public void addToMediaList(Media aMedia, ArrayList<Media> mediaList) {
        boolean added = false;
        if(!containMedia(aMedia, mediaList)) {
            mediaList.add(aMedia);
//          System.out.println("Success! "); I want this message shows in a pop up window when running the app
            added = true;
        }
        if(!added) {
            System.out.println("This " + aMedia.getClass() + " is already in your list.");
        }
    }

    //REQUIRES: mediaList is not null
    //EFFECTS: returns true if the mediaList contains the Media, false otherwise
    public boolean containMedia(Media aMedia, ArrayList<Media> mediaList) {
        for(Media m: mediaList) {
            if(m.getMediaName().equals(aMedia.getMediaName())) {return true;}
        }
        return false;
    }

    //EFFECTS: prints out the user's information
    public void printOutProfileInfo() {
        System.out.println(userName + '\n' + "email: " + emailAddress + '\n' + "Password: " + passWord + '\n' + "Gender: " + gender);
    }

    //EFFECTS: prints out the user's information
    public void printOutWishList() {
        System.out.println("**************************************************************************************");
        if(movieList.size() == 0) {
            if(TVShowList.size() == 0) {
                System.out.println("Ops, there is nothing in your wish list. Go add some ~.");
            }
            else {
                System.out.println("Your TVShow Wish List: ");
                for(Media d: TVShowList) {
                    System.out.println(d.getMediaName()+ ", On Screen Date: " + d.getOnScreenDate() + '\n');
                }
            }
        }
        else {
            if(TVShowList.size() == 0) {
                System.out.println("Your Movie Wish List: ");
                for(Media m: movieList) {
                    System.out.println(m.getMediaName()+ ", On Screen Date: " + m.getOnScreenDate() + '\n');
                }
            }
            else {
                System.out.println("Your Movie Wish List: ");
                for(Media m: movieList) {
                    System.out.println(m.getMediaName()+ ", On Screen Date: " + m.getOnScreenDate() + '\n');
                }
                System.out.println("Your TVShow Wish List: ");
                for(Media d: TVShowList) {
                    System.out.println(d.getMediaName()+ ", On Screen Date: " + d.getOnScreenDate() + '\n');
                }
            }
        }
        System.out.println("**************************************************************************************");

    }

    //REQUESTS: the number contain in the String must be bigger than 0 and less than the sum of movie and TV show data base size
    //MODIFIES: MediaDataBase dataBase
    //EFFECTS: add movies and TV shows to this person's two wish lists respectively
    public void addToWishList(String favNumber, MediaDataBase movieDataBase, MediaDataBase tvShowDataBase) {
        Scanner sc = new Scanner(favNumber);
        while(sc.hasNextInt()) {
            int number = sc.nextInt();
            Media aMedia;
            if(number <= movieDataBase.getMediaDataBaseSize()) {
                aMedia = movieDataBase.getAMedia(number);
                addToMediaList(aMedia, movieList);
            }
            else {
                aMedia = tvShowDataBase.getAMedia(number - movieDataBase.getMediaDataBaseSize());
                addToMediaList(aMedia, TVShowList);
            }

        }
    }

    //REQUIRES: deleteNumber should be > movieList.size() and < 1
    //MODIFIES: this
    //EFFECTS: remove selected media from the wish list
    public void deleteFromWishList(int deleteNumber, String mediaType) {
        if(mediaType.equals("M") || mediaType.equals("m")) {
            movieList.remove(deleteNumber - 1);
        }
        else {
            TVShowList.remove(deleteNumber - 1);
        }
    }

        //EFFECTS: returns the movieList
    public ArrayList<Media> getMovieList() {
        return this.movieList;
    }
    //EFFECTS: returns the TVShowList
    public ArrayList<Media> getTVShowList() {
        return this.TVShowList;
    }
}
